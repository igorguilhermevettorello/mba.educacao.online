// <auto-generated />
using System;
using MBA.Educacao.Online.Cursos.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MBA.Educacao.Online.Cursos.Data.Migrations
{
    [DbContext(typeof(CursoContext))]
    [Migration("20251010192147_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.20");

            modelBuilder.Entity("MBA.Educacao.Online.Cursos.Domain.Entities.Aula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("DuracaoMinutos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ordem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Aulas", (string)null);
                });

            modelBuilder.Entity("MBA.Educacao.Online.Cursos.Domain.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Instrutor")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Valor")
                        .HasPrecision(15, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("MBA.Educacao.Online.Cursos.Domain.Entities.Aula", b =>
                {
                    b.HasOne("MBA.Educacao.Online.Cursos.Domain.Entities.Curso", "Curso")
                        .WithMany("Aulas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MBA.Educacao.Online.Cursos.Domain.Entities.Curso", b =>
                {
                    b.OwnsOne("MBA.Educacao.Online.Cursos.Domain.ValueObjects.ConteudoProgramatico", "ConteudoProgramatico", b1 =>
                        {
                            b1.Property<Guid>("CursoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Bibliografia")
                                .IsRequired()
                                .HasColumnType("varchar(2000)")
                                .HasColumnName("Bibliografia");

                            b1.Property<string>("Ementa")
                                .IsRequired()
                                .HasColumnType("varchar(2000)")
                                .HasColumnName("Ementa");

                            b1.Property<string>("MaterialUrl")
                                .IsRequired()
                                .HasColumnType("varchar(500)")
                                .HasColumnName("MaterialUrl");

                            b1.Property<string>("Objetivo")
                                .IsRequired()
                                .HasColumnType("varchar(1000)")
                                .HasColumnName("Objetivo");

                            b1.HasKey("CursoId");

                            b1.ToTable("Cursos");

                            b1.WithOwner()
                                .HasForeignKey("CursoId");
                        });

                    b.Navigation("ConteudoProgramatico")
                        .IsRequired();
                });

            modelBuilder.Entity("MBA.Educacao.Online.Cursos.Domain.Entities.Curso", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
