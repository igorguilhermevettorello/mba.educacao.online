// <auto-generated />
using System;
using MBA.Educacao.Online.Alunos.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MBA.Educacao.Online.Alunos.Data.Migrations
{
    [DbContext(typeof(AlunoContext))]
    [Migration("20251028012019_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.21");

            modelBuilder.Entity("MBA.Educacao.Online.Alunos.Domain.Entities.Aluno", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("MBA.Educacao.Online.Alunos.Domain.Entities.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlunoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("MBA.Educacao.Online.Alunos.Domain.Entities.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlunoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("MBA.Educacao.Online.Alunos.Domain.Entities.Certificado", b =>
                {
                    b.HasOne("MBA.Educacao.Online.Alunos.Domain.Entities.Aluno", null)
                        .WithMany("Certificados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MBA.Educacao.Online.Alunos.Domain.Entities.Matricula", b =>
                {
                    b.HasOne("MBA.Educacao.Online.Alunos.Domain.Entities.Aluno", null)
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("MBA.Educacao.Online.Alunos.Domain.Entities.HistoricoAprendizado", "HistoricosAprendizado", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<Guid?>("AulaId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("DataConclusao")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("DataInicio")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("MatriculaId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("ProgressoPercentual")
                                .HasPrecision(5, 2)
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("MatriculaId");

                            b1.ToTable("HistoricosAprendizado", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MatriculaId");
                        });

                    b.Navigation("HistoricosAprendizado");
                });

            modelBuilder.Entity("MBA.Educacao.Online.Alunos.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
